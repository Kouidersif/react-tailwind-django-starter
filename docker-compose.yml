

services:
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app/backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=redis
    restart: always

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A DjangoProject worker -l info
    volumes:
      - ./backend:/app/backend
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_HOST=redis
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    restart: always
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A DjangoProject beat -l INFO
    volumes:
      - ./backend:/app/backend
    depends_on:
      - django
      - redis
      - postgres
      - celery
    environment:
      - REDIS_HOST=redis
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always

  postgres:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    ports:
      - "5433:5432"
    restart: always

  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    restart: always


volumes:
    postgres_data:
